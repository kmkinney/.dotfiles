(defvar vol_rev false)
(defpoll volume_percent :interval "3s" "pamixer --get-volume")
(defpoll volume_mute :interval "3s" "pamixer --get-mute")

(defvar eww "eww -c ~/.config/eww")
(defwidget bar []
  (box :orientation "h" :hexpand true
    (box :halign "start" :hexpand true :vexpand false :orientation "h" :space-evenly false
      (workspaces)
    )
    (box :halign "center" :hexpand true :vexpand false :orientation "h" :space-evenly false
    )
    (box :halign "end" :hexpand true :vexpand false :orientation "h" :space-evenly false
      (right)
    )
  )
)

(defwidget right[]
  (box :orientation "h" :hexpand false :space-evenly false
    (volume)
    (battery)
    (time)
  )
)

(defwidget battery []
	(button 
		:tooltip "${EWW_BATTERY.BAT0.capacity}%"
		(label
		:style "background-image: url('images/${
			EWW_BATTERY.BAT0.capacity > 88 ? 7
			: EWW_BATTERY.BAT0.capacity > 75 ? 6
			: EWW_BATTERY.BAT0.capacity > 62 ? 5
			: EWW_BATTERY.BAT0.capacity > 50 ? 4
			: EWW_BATTERY.BAT0.capacity > 38 ? 3
			: EWW_BATTERY.BAT0.capacity > 25 ? 2
			: EWW_BATTERY.BAT0.capacity > 12 ? 1
			: 0
		}${EWW_BATTERY.BAT0.status == "Charging" ? "-c.svg" : ".svg"}');"
		:class "wlabel")
	)
)


;;  TIME

(defpoll hour :interval "10s" "date +'%-l:%M'")
(defpoll dateVar :interval "60s" "date '+%B %-e, %Y'")

(defwidget time []
  (eventbox :cursor "hand"  :hexpand false :vexpand false
                :tooltip "${dateVar}"
    (box :orientation "h" :hexpand false :vexpand false :space-evenly false :class "clock"
      (button		:class "date"
                :onclick ""	"${hour}")
    )
  )
)

(defwidget volume []
 (eventbox :onhover "${eww} update vol_rev=true"
			  :onhoverlost "${eww} update vol_rev=false"
			  :tooltip "${volume_percent}%"
  (box :space-evenly "false" :orientation "h" :spacing "3" 
	(button :onclick "pamixer -t; ${eww} update volume_mute=$(pamixer --get-mute)"  (label :class {volume_mute ? "vol mute" : volume_percent>80 ? "vol high" : volume_percent>50 ? "vol med" : volume_percent>5 ? "vol low" : "vol off"} :text ""))
	(revealer :transition "slideright"
			  :reveal vol_rev
			  :duration "150ms"
	(scale    :class "volbar"
			  :value volume_percent
			  :orientation "h"
			  :tooltip "${volume_percent}%"
			  :max 150
			  :min 0
			  :onchange "pulseaudio-ctl set {} && ${eww} update volume_percent={}" )))))



;; WORKSPACES

(deflisten workspaces_listen "./scripts/workspaces.sh")
(defwidget workspaces []
  (literal :content workspaces_listen :class "workspace-container"))
    

(defwindow bar
  :monitor 0
  :geometry (geometry :height "0px" :x "0px" :y "0" :width "1920px" :anchor "top center")
  :stacking "fg"
  :exclusive true
  (bar))

